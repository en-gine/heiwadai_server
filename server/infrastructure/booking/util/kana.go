package util

import (
	"strings"
)

var hiraToHalfKanaMap = map[rune]string{
	'あ': "ｱ", 'い': "ｲ", 'う': "ｳ", 'え': "ｴ", 'お': "ｵ",
	'か': "ｶ", 'き': "ｷ", 'く': "ｸ", 'け': "ｹ", 'こ': "ｺ",
	'さ': "ｻ", 'し': "ｼ", 'す': "ｽ", 'せ': "ｾ", 'そ': "ｿ",
	'た': "ﾀ", 'ち': "ﾁ", 'つ': "ﾂ", 'て': "ﾃ", 'と': "ﾄ",
	'な': "ﾅ", 'に': "ﾆ", 'ぬ': "ﾇ", 'ね': "ﾈ", 'の': "ﾉ",
	'は': "ﾊ", 'ひ': "ﾋ", 'ふ': "ﾌ", 'へ': "ﾍ", 'ほ': "ﾎ",
	'ま': "ﾏ", 'み': "ﾐ", 'む': "ﾑ", 'め': "ﾒ", 'も': "ﾓ",
	'や': "ﾔ", 'ゆ': "ﾕ", 'よ': "ﾖ",
	'ら': "ﾗ", 'り': "ﾘ", 'る': "ﾙ", 'れ': "ﾚ", 'ろ': "ﾛ",
	'わ': "ﾜ", 'を': "ｦ", 'ん': "ﾝ",
	'が': "ｶﾞ", 'ぎ': "ｷﾞ", 'ぐ': "ｸﾞ", 'げ': "ｹﾞ", 'ご': "ｺﾞ",
	'ざ': "ｻﾞ", 'じ': "ｼﾞ", 'ず': "ｽﾞ", 'ぜ': "ｾﾞ", 'ぞ': "ｿﾞ",
	'だ': "ﾀﾞ", 'ぢ': "ﾁﾞ", 'づ': "ﾂﾞ", 'で': "ﾃﾞ", 'ど': "ﾄﾞ",
	'ば': "ﾊﾞ", 'び': "ﾋﾞ", 'ぶ': "ﾌﾞ", 'べ': "ﾍﾞ", 'ぼ': "ﾎﾞ",
	'ぱ': "ﾊﾟ", 'ぴ': "ﾋﾟ", 'ぷ': "ﾌﾟ", 'ぺ': "ﾍﾟ", 'ぽ': "ﾎﾟ",
	'ゔ': "ｳﾞ", 'っ': "ｯ", 'ゃ': "ｬ", 'ゅ': "ｭ", 'ょ': "ｮ",
	'、': "､", '。': "｡", 'ー': "ｰ", '「': "｢", '」': "｣",
	'！': "!", '？': "?", '：': ":", '・': "･", '（': "(", '）': ")",
	'［': "[", '］': "]", '｛': "{", '｝': "}",
	'＜': "<", '＞': ">", '＝': "=", '＋': "+", '－': "-", '＊': "*",
	'／': "/", '％': "%", '＃': "#", '＆': "&", '＄': "$", '＠': "@",
	'＼': "\\", '｜': "|", '＾': "^", '～': "~", '‘': "`", '’': "'",
	'“': "\"", '”': "\"", '＿': "_",
	'０': "0", '１': "1", '２': "2", '３': "3", '４': "4",
	'５': "5", '６': "6", '７': "7", '８': "8", '９': "9",
	'Ａ': "A", 'Ｂ': "B", 'Ｃ': "C", 'Ｄ': "D", 'Ｅ': "E",
	'Ｆ': "F", 'Ｇ': "G", 'Ｈ': "H", 'Ｉ': "I", 'Ｊ': "J",
	'Ｋ': "K", 'Ｌ': "L", 'Ｍ': "M", 'Ｎ': "N", 'Ｏ': "O",
	'Ｐ': "P", 'Ｑ': "Q", 'Ｒ': "R", 'Ｓ': "S", 'Ｔ': "T",
	'Ｕ': "U", 'Ｖ': "V", 'Ｗ': "W", 'Ｘ': "X", 'Ｙ': "Y",
	'Ｚ': "Z", 'ａ': "a", 'ｂ': "b", 'ｃ': "c", 'ｄ': "d",
	'ｅ': "e", 'ｆ': "f", 'ｇ': "g", 'ｈ': "h", 'ｉ': "i",
	'ｊ': "j", 'ｋ': "k", 'ｌ': "l", 'ｍ': "m", 'ｎ': "n",
	'ｏ': "o", 'ｐ': "p", 'ｑ': "q", 'ｒ': "r", 'ｓ': "s",
	'ｔ': "t", 'ｕ': "u", 'ｖ': "v", 'ｗ': "w", 'ｘ': "x",
	'ｙ': "y", 'ｚ': "z",
}

func HiraToHalfKana(input string) string {
	var sb strings.Builder
	for _, char := range input {
		if kana, ok := hiraToHalfKanaMap[char]; ok {
			sb.WriteString(kana)
		} else {
			sb.WriteRune(char)
		}
	}
	return sb.String()
}
