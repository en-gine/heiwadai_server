// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: v1/user/Book.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	shared "server/api/v1/shared"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomType int32

const (
	RoomType_RoomTypeSingle     RoomType = 0
	RoomType_RoomTypeSemiDouble RoomType = 1
	RoomType_RoomTypeDouble     RoomType = 2
	RoomType_RoomTypeTwin       RoomType = 3
	RoomType_RoomTypeFourth     RoomType = 4
	RoomType_RoomTypeUnknown    RoomType = 5
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "RoomTypeSingle",
		1: "RoomTypeSemiDouble",
		2: "RoomTypeDouble",
		3: "RoomTypeTwin",
		4: "RoomTypeFourth",
		5: "RoomTypeUnknown",
	}
	RoomType_value = map[string]int32{
		"RoomTypeSingle":     0,
		"RoomTypeSemiDouble": 1,
		"RoomTypeDouble":     2,
		"RoomTypeTwin":       3,
		"RoomTypeFourth":     4,
		"RoomTypeUnknown":    5,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[0].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[0]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{0}
}

type SmokeType int32

const (
	SmokeType_SmokeTypeNonSmoking SmokeType = 0
	SmokeType_SmokeTypeSmoking    SmokeType = 1
	SmokeType_SmokeTypeUnknown    SmokeType = 2
)

// Enum value maps for SmokeType.
var (
	SmokeType_name = map[int32]string{
		0: "SmokeTypeNonSmoking",
		1: "SmokeTypeSmoking",
		2: "SmokeTypeUnknown",
	}
	SmokeType_value = map[string]int32{
		"SmokeTypeNonSmoking": 0,
		"SmokeTypeSmoking":    1,
		"SmokeTypeUnknown":    2,
	}
)

func (x SmokeType) Enum() *SmokeType {
	p := new(SmokeType)
	*p = x
	return p
}

func (x SmokeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmokeType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[1].Descriptor()
}

func (SmokeType) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[1]
}

func (x SmokeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmokeType.Descriptor instead.
func (SmokeType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{1}
}

type BookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StayFrom    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult       uint32                 `protobuf:"varint,4,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child       uint32                 `protobuf:"varint,5,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount   uint32                 `protobuf:"varint,6,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime string                 `protobuf:"bytes,7,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"` // CheckInTime message needs to be defined
	TotalCost   uint32                 `protobuf:"varint,8,opt,name=TotalCost,proto3" json:"TotalCost,omitempty"`
	GuestData   *GuestData             `protobuf:"bytes,9,opt,name=GuestData,proto3" json:"GuestData,omitempty"`
	Plan        *DisplayPlan           `protobuf:"bytes,10,opt,name=Plan,proto3" json:"Plan,omitempty"`
	Note        string                 `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *BookResponse) Reset() {
	*x = BookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookResponse) ProtoMessage() {}

func (x *BookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookResponse.ProtoReflect.Descriptor instead.
func (*BookResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{0}
}

func (x *BookResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BookResponse) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *BookResponse) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *BookResponse) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *BookResponse) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *BookResponse) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *BookResponse) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *BookResponse) GetTotalCost() uint32 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *BookResponse) GetGuestData() *GuestData {
	if x != nil {
		return x.GuestData
	}
	return nil
}

func (x *BookResponse) GetPlan() *DisplayPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *BookResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GuestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName     string             `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName      string             `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	FirstNameKana string             `protobuf:"bytes,3,opt,name=FirstNameKana,proto3" json:"FirstNameKana,omitempty"`
	LastNameKana  string             `protobuf:"bytes,4,opt,name=LastNameKana,proto3" json:"LastNameKana,omitempty"`
	CompanyName   *string            `protobuf:"bytes,5,opt,name=CompanyName,proto3,oneof" json:"CompanyName,omitempty"` // Optional field
	ZipCode       *string            `protobuf:"bytes,6,opt,name=ZipCode,proto3,oneof" json:"ZipCode,omitempty"`         // Optional field
	Prefecture    *shared.Prefecture `protobuf:"varint,7,opt,name=Prefecture,proto3,enum=server.shared.Prefecture,oneof" json:"Prefecture,omitempty"`
	City          *string            `protobuf:"bytes,8,opt,name=City,proto3,oneof" json:"City,omitempty"`       // Optional field
	Address       *string            `protobuf:"bytes,9,opt,name=Address,proto3,oneof" json:"Address,omitempty"` // Optional field
	Tel           *string            `protobuf:"bytes,10,opt,name=Tel,proto3,oneof" json:"Tel,omitempty"`        // Optional field
	Mail          string             `protobuf:"bytes,11,opt,name=Mail,proto3" json:"Mail,omitempty"`
}

func (x *GuestData) Reset() {
	*x = GuestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestData) ProtoMessage() {}

func (x *GuestData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestData.ProtoReflect.Descriptor instead.
func (*GuestData) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{1}
}

func (x *GuestData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GuestData) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GuestData) GetFirstNameKana() string {
	if x != nil {
		return x.FirstNameKana
	}
	return ""
}

func (x *GuestData) GetLastNameKana() string {
	if x != nil {
		return x.LastNameKana
	}
	return ""
}

func (x *GuestData) GetCompanyName() string {
	if x != nil && x.CompanyName != nil {
		return *x.CompanyName
	}
	return ""
}

func (x *GuestData) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *GuestData) GetPrefecture() shared.Prefecture {
	if x != nil && x.Prefecture != nil {
		return *x.Prefecture
	}
	return shared.Prefecture(0)
}

func (x *GuestData) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *GuestData) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *GuestData) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *GuestData) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title     string    `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Price     uint32    `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	ImageURL  string    `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	RoomType  RoomType  `protobuf:"varint,5,opt,name=RoomType,proto3,enum=server.user.RoomType" json:"RoomType,omitempty"`
	MealType  *MealType `protobuf:"bytes,6,opt,name=MealType,proto3" json:"MealType,omitempty"`
	SmokeType SmokeType `protobuf:"varint,7,opt,name=SmokeType,proto3,enum=server.user.SmokeType" json:"SmokeType,omitempty"`
	OverView  string    `protobuf:"bytes,8,opt,name=OverView,proto3" json:"OverView,omitempty"`
	StoreID   string    `protobuf:"bytes,9,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{2}
}

func (x *Plan) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Plan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Plan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Plan) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *Plan) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_RoomTypeSingle
}

func (x *Plan) GetMealType() *MealType {
	if x != nil {
		return x.MealType
	}
	return nil
}

func (x *Plan) GetSmokeType() SmokeType {
	if x != nil {
		return x.SmokeType
	}
	return SmokeType_SmokeTypeNonSmoking
}

func (x *Plan) GetOverView() string {
	if x != nil {
		return x.OverView
	}
	return ""
}

func (x *Plan) GetStoreID() string {
	if x != nil {
		return x.StoreID
	}
	return ""
}

type DisplayPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title           string  `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Price           uint32  `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	ImageURL        string  `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	RoomTypeName    string  `protobuf:"bytes,5,opt,name=RoomTypeName,proto3" json:"RoomTypeName,omitempty"`
	MealTypeName    string  `protobuf:"bytes,6,opt,name=MealTypeName,proto3" json:"MealTypeName,omitempty"`
	SmokeTypeName   string  `protobuf:"bytes,7,opt,name=SmokeTypeName,proto3" json:"SmokeTypeName,omitempty"`
	OverView        string  `protobuf:"bytes,8,opt,name=OverView,proto3" json:"OverView,omitempty"`
	StoreID         string  `protobuf:"bytes,9,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	StoreName       string  `protobuf:"bytes,10,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreBranchName *string `protobuf:"bytes,11,opt,name=StoreBranchName,proto3,oneof" json:"StoreBranchName,omitempty"`
}

func (x *DisplayPlan) Reset() {
	*x = DisplayPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayPlan) ProtoMessage() {}

func (x *DisplayPlan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayPlan.ProtoReflect.Descriptor instead.
func (*DisplayPlan) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{3}
}

func (x *DisplayPlan) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DisplayPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DisplayPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplayPlan) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *DisplayPlan) GetRoomTypeName() string {
	if x != nil {
		return x.RoomTypeName
	}
	return ""
}

func (x *DisplayPlan) GetMealTypeName() string {
	if x != nil {
		return x.MealTypeName
	}
	return ""
}

func (x *DisplayPlan) GetSmokeTypeName() string {
	if x != nil {
		return x.SmokeTypeName
	}
	return ""
}

func (x *DisplayPlan) GetOverView() string {
	if x != nil {
		return x.OverView
	}
	return ""
}

func (x *DisplayPlan) GetStoreID() string {
	if x != nil {
		return x.StoreID
	}
	return ""
}

func (x *DisplayPlan) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *DisplayPlan) GetStoreBranchName() string {
	if x != nil && x.StoreBranchName != nil {
		return *x.StoreBranchName
	}
	return ""
}

type MealType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Morning bool `protobuf:"varint,1,opt,name=Morning,proto3" json:"Morning,omitempty"`
	Dinner  bool `protobuf:"varint,2,opt,name=Dinner,proto3" json:"Dinner,omitempty"`
}

func (x *MealType) Reset() {
	*x = MealType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealType) ProtoMessage() {}

func (x *MealType) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealType.ProtoReflect.Descriptor instead.
func (*MealType) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{4}
}

func (x *MealType) GetMorning() bool {
	if x != nil {
		return x.Morning
	}
	return false
}

func (x *MealType) GetDinner() bool {
	if x != nil {
		return x.Dinner
	}
	return false
}

type ReserveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StayFrom    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult       uint32                 `protobuf:"varint,3,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child       uint32                 `protobuf:"varint,4,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount   uint32                 `protobuf:"varint,5,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime string                 `protobuf:"bytes,6,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"`
	TotalCost   uint32                 `protobuf:"varint,7,opt,name=TotalCost,proto3" json:"TotalCost,omitempty"`
	GuestData   *GuestData             `protobuf:"bytes,8,opt,name=GuestData,proto3" json:"GuestData,omitempty"`
	BookPlan    *Plan                  `protobuf:"bytes,9,opt,name=BookPlan,proto3" json:"BookPlan,omitempty"`
	Note        *string                `protobuf:"bytes,11,opt,name=Note,proto3,oneof" json:"Note,omitempty"`
}

func (x *ReserveRequest) Reset() {
	*x = ReserveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRequest) ProtoMessage() {}

func (x *ReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRequest.ProtoReflect.Descriptor instead.
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{5}
}

func (x *ReserveRequest) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *ReserveRequest) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *ReserveRequest) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *ReserveRequest) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *ReserveRequest) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *ReserveRequest) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *ReserveRequest) GetTotalCost() uint32 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *ReserveRequest) GetGuestData() *GuestData {
	if x != nil {
		return x.GuestData
	}
	return nil
}

func (x *ReserveRequest) GetBookPlan() *Plan {
	if x != nil {
		return x.BookPlan
	}
	return nil
}

func (x *ReserveRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

type BookIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *BookIDRequest) Reset() {
	*x = BookIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookIDRequest) ProtoMessage() {}

func (x *BookIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookIDRequest.ProtoReflect.Descriptor instead.
func (*BookIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{6}
}

func (x *BookIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type BooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*BookResponse `protobuf:"bytes,1,rep,name=Books,proto3" json:"Books,omitempty"`
}

func (x *BooksResponse) Reset() {
	*x = BooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksResponse) ProtoMessage() {}

func (x *BooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksResponse.ProtoReflect.Descriptor instead.
func (*BooksResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{7}
}

func (x *BooksResponse) GetBooks() []*BookResponse {
	if x != nil {
		return x.Books
	}
	return nil
}

type PlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*DisplayPlan `protobuf:"bytes,1,rep,name=Plans,proto3" json:"Plans,omitempty"`
}

func (x *PlansResponse) Reset() {
	*x = PlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansResponse) ProtoMessage() {}

func (x *PlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansResponse.ProtoReflect.Descriptor instead.
func (*PlansResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{8}
}

func (x *PlansResponse) GetPlans() []*DisplayPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PlanSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreIDs    []string               `protobuf:"bytes,1,rep,name=StoreIDs,proto3" json:"StoreIDs,omitempty"`
	StayFrom    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult       uint32                 `protobuf:"varint,4,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child       uint32                 `protobuf:"varint,5,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount   uint32                 `protobuf:"varint,6,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime string                 `protobuf:"bytes,7,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"`
	SmokeTypes  []SmokeType            `protobuf:"varint,8,rep,packed,name=SmokeTypes,proto3,enum=server.user.SmokeType" json:"SmokeTypes,omitempty"`
	MealType    *MealType              `protobuf:"bytes,9,opt,name=MealType,proto3" json:"MealType,omitempty"`
	RoomTypes   []RoomType             `protobuf:"varint,10,rep,packed,name=RoomTypes,proto3,enum=server.user.RoomType" json:"RoomTypes,omitempty"`
}

func (x *PlanSearchRequest) Reset() {
	*x = PlanSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_Book_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanSearchRequest) ProtoMessage() {}

func (x *PlanSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanSearchRequest.ProtoReflect.Descriptor instead.
func (*PlanSearchRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{9}
}

func (x *PlanSearchRequest) GetStoreIDs() []string {
	if x != nil {
		return x.StoreIDs
	}
	return nil
}

func (x *PlanSearchRequest) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *PlanSearchRequest) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *PlanSearchRequest) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *PlanSearchRequest) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *PlanSearchRequest) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *PlanSearchRequest) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *PlanSearchRequest) GetSmokeTypes() []SmokeType {
	if x != nil {
		return x.SmokeTypes
	}
	return nil
}

func (x *PlanSearchRequest) GetMealType() *MealType {
	if x != nil {
		return x.MealType
	}
	return nil
}

func (x *PlanSearchRequest) GetRoomTypes() []RoomType {
	if x != nil {
		return x.RoomTypes
	}
	return nil
}

var File_v1_user_Book_proto protoreflect.FileDescriptor

var file_v1_user_Book_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x0c,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x08,
	0x53, 0x74, 0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x53, 0x74, 0x61, 0x79,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0xc0, 0x03, 0x0a, 0x09, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4b,
	0x61, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x4b, 0x61, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x4b, 0x61, 0x6e, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4b, 0x61, 0x6e, 0x61, 0x12, 0x25, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x02, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x54, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x50, 0x72, 0x65, 0x66, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x54, 0x65, 0x6c, 0x22, 0xb0, 0x02,
	0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x31,
	0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x76,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x76,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x22, 0xea, 0x02, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a,
	0x08, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4d, 0x6f, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x8d, 0x03, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x08, 0x53, 0x74, 0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x53, 0x74,
	0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x79, 0x54, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x53, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x41, 0x64, 0x75, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x08, 0x42, 0x6f,
	0x6f, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x42,
	0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x0d,
	0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x05, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x3f,
	0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22,
	0xa7, 0x03, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x73, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x53, 0x74, 0x61, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x79, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x53, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x41, 0x64,
	0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x6d, 0x6f,
	0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x6d, 0x6f, 0x6b,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x08, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2a, 0x85, 0x01, 0x0a, 0x08, 0x52, 0x6f,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x6f,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x6d, 0x69, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x05, 0x2a, 0x50, 0x0a, 0x09, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x53, 0x6d,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x6d, 0x6f, 0x6b, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x6d, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x02, 0x32, 0x9d, 0x02, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x42,
	0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x32, 0x58, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7d, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x12, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0xa2, 0x02, 0x03, 0x53, 0x55, 0x58, 0xaa, 0x02, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0xca, 0x02, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x55,
	0x73, 0x65, 0x72, 0xe2, 0x02, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x55, 0x73, 0x65,
	0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x3a, 0x55, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_user_Book_proto_rawDescOnce sync.Once
	file_v1_user_Book_proto_rawDescData = file_v1_user_Book_proto_rawDesc
)

func file_v1_user_Book_proto_rawDescGZIP() []byte {
	file_v1_user_Book_proto_rawDescOnce.Do(func() {
		file_v1_user_Book_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_user_Book_proto_rawDescData)
	})
	return file_v1_user_Book_proto_rawDescData
}

var file_v1_user_Book_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_user_Book_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_user_Book_proto_goTypes = []interface{}{
	(RoomType)(0),                 // 0: server.user.RoomType
	(SmokeType)(0),                // 1: server.user.SmokeType
	(*BookResponse)(nil),          // 2: server.user.BookResponse
	(*GuestData)(nil),             // 3: server.user.GuestData
	(*Plan)(nil),                  // 4: server.user.Plan
	(*DisplayPlan)(nil),           // 5: server.user.DisplayPlan
	(*MealType)(nil),              // 6: server.user.MealType
	(*ReserveRequest)(nil),        // 7: server.user.ReserveRequest
	(*BookIDRequest)(nil),         // 8: server.user.BookIDRequest
	(*BooksResponse)(nil),         // 9: server.user.BooksResponse
	(*PlansResponse)(nil),         // 10: server.user.PlansResponse
	(*PlanSearchRequest)(nil),     // 11: server.user.PlanSearchRequest
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(shared.Prefecture)(0),        // 13: server.shared.Prefecture
	(*emptypb.Empty)(nil),         // 14: google.protobuf.Empty
}
var file_v1_user_Book_proto_depIdxs = []int32{
	12, // 0: server.user.BookResponse.StayFrom:type_name -> google.protobuf.Timestamp
	12, // 1: server.user.BookResponse.StayTo:type_name -> google.protobuf.Timestamp
	3,  // 2: server.user.BookResponse.GuestData:type_name -> server.user.GuestData
	5,  // 3: server.user.BookResponse.Plan:type_name -> server.user.DisplayPlan
	13, // 4: server.user.GuestData.Prefecture:type_name -> server.shared.Prefecture
	0,  // 5: server.user.Plan.RoomType:type_name -> server.user.RoomType
	6,  // 6: server.user.Plan.MealType:type_name -> server.user.MealType
	1,  // 7: server.user.Plan.SmokeType:type_name -> server.user.SmokeType
	12, // 8: server.user.ReserveRequest.StayFrom:type_name -> google.protobuf.Timestamp
	12, // 9: server.user.ReserveRequest.StayTo:type_name -> google.protobuf.Timestamp
	3,  // 10: server.user.ReserveRequest.GuestData:type_name -> server.user.GuestData
	4,  // 11: server.user.ReserveRequest.BookPlan:type_name -> server.user.Plan
	2,  // 12: server.user.BooksResponse.Books:type_name -> server.user.BookResponse
	5,  // 13: server.user.PlansResponse.Plans:type_name -> server.user.DisplayPlan
	12, // 14: server.user.PlanSearchRequest.StayFrom:type_name -> google.protobuf.Timestamp
	12, // 15: server.user.PlanSearchRequest.StayTo:type_name -> google.protobuf.Timestamp
	1,  // 16: server.user.PlanSearchRequest.SmokeTypes:type_name -> server.user.SmokeType
	6,  // 17: server.user.PlanSearchRequest.MealType:type_name -> server.user.MealType
	0,  // 18: server.user.PlanSearchRequest.RoomTypes:type_name -> server.user.RoomType
	14, // 19: server.user.BookController.GetMyBook:input_type -> google.protobuf.Empty
	8,  // 20: server.user.BookController.GetBookByID:input_type -> server.user.BookIDRequest
	8,  // 21: server.user.BookController.Cancel:input_type -> server.user.BookIDRequest
	7,  // 22: server.user.BookController.Reserve:input_type -> server.user.ReserveRequest
	11, // 23: server.user.PlanController.Search:input_type -> server.user.PlanSearchRequest
	9,  // 24: server.user.BookController.GetMyBook:output_type -> server.user.BooksResponse
	2,  // 25: server.user.BookController.GetBookByID:output_type -> server.user.BookResponse
	14, // 26: server.user.BookController.Cancel:output_type -> google.protobuf.Empty
	14, // 27: server.user.BookController.Reserve:output_type -> google.protobuf.Empty
	10, // 28: server.user.PlanController.Search:output_type -> server.user.PlansResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_v1_user_Book_proto_init() }
func file_v1_user_Book_proto_init() {
	if File_v1_user_Book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_user_Book_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_Book_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_user_Book_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_v1_user_Book_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_v1_user_Book_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_user_Book_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_v1_user_Book_proto_goTypes,
		DependencyIndexes: file_v1_user_Book_proto_depIdxs,
		EnumInfos:         file_v1_user_Book_proto_enumTypes,
		MessageInfos:      file_v1_user_Book_proto_msgTypes,
	}.Build()
	File_v1_user_Book_proto = out.File
	file_v1_user_Book_proto_rawDesc = nil
	file_v1_user_Book_proto_goTypes = nil
	file_v1_user_Book_proto_depIdxs = nil
}
