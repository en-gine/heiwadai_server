// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/user/Book.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	shared "server/api/v1/shared"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PricePerCategory int32

const (
	PricePerCategory_PricePerNight          PricePerCategory = 0
	PricePerCategory_PricePerPerson         PricePerCategory = 1
	PricePerCategory_PricePerNightAndPerson PricePerCategory = 2
)

// Enum value maps for PricePerCategory.
var (
	PricePerCategory_name = map[int32]string{
		0: "PricePerNight",
		1: "PricePerPerson",
		2: "PricePerNightAndPerson",
	}
	PricePerCategory_value = map[string]int32{
		"PricePerNight":          0,
		"PricePerPerson":         1,
		"PricePerNightAndPerson": 2,
	}
)

func (x PricePerCategory) Enum() *PricePerCategory {
	p := new(PricePerCategory)
	*p = x
	return p
}

func (x PricePerCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PricePerCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[0].Descriptor()
}

func (PricePerCategory) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[0]
}

func (x PricePerCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PricePerCategory.Descriptor instead.
func (PricePerCategory) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{0}
}

type MealType int32

const (
	MealType_Morning MealType = 0
	MealType_Dinner  MealType = 1
)

// Enum value maps for MealType.
var (
	MealType_name = map[int32]string{
		0: "Morning",
		1: "Dinner",
	}
	MealType_value = map[string]int32{
		"Morning": 0,
		"Dinner":  1,
	}
)

func (x MealType) Enum() *MealType {
	p := new(MealType)
	*p = x
	return p
}

func (x MealType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MealType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[1].Descriptor()
}

func (MealType) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[1]
}

func (x MealType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MealType.Descriptor instead.
func (MealType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{1}
}

type RoomType int32

const (
	RoomType_RoomTypeUnknown      RoomType = 0
	RoomType_RoomTypeSingle       RoomType = 1 //予約システムの都合で１から
	RoomType_RoomTypeSemiDouble   RoomType = 2
	RoomType_RoomTypeDouble       RoomType = 3
	RoomType_RoomTypeTwin         RoomType = 4
	RoomType_RoomTypeFourth       RoomType = 5
	RoomType_RoomTypeTatami       RoomType = 6
	RoomType_RoomTypeTatamiAndBed RoomType = 7
	RoomType_RoomTypeTriple       RoomType = 8
	RoomType_RoomTypeOther        RoomType = 9
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "RoomTypeUnknown",
		1: "RoomTypeSingle",
		2: "RoomTypeSemiDouble",
		3: "RoomTypeDouble",
		4: "RoomTypeTwin",
		5: "RoomTypeFourth",
		6: "RoomTypeTatami",
		7: "RoomTypeTatamiAndBed",
		8: "RoomTypeTriple",
		9: "RoomTypeOther",
	}
	RoomType_value = map[string]int32{
		"RoomTypeUnknown":      0,
		"RoomTypeSingle":       1,
		"RoomTypeSemiDouble":   2,
		"RoomTypeDouble":       3,
		"RoomTypeTwin":         4,
		"RoomTypeFourth":       5,
		"RoomTypeTatami":       6,
		"RoomTypeTatamiAndBed": 7,
		"RoomTypeTriple":       8,
		"RoomTypeOther":        9,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[2].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[2]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{2}
}

type SmokeType int32

const (
	SmokeType_SmokeTypeNonSmoking SmokeType = 0
	SmokeType_SmokeTypeSmoking    SmokeType = 1
	SmokeType_SmokeTypeUnknown    SmokeType = 2
)

// Enum value maps for SmokeType.
var (
	SmokeType_name = map[int32]string{
		0: "SmokeTypeNonSmoking",
		1: "SmokeTypeSmoking",
		2: "SmokeTypeUnknown",
	}
	SmokeType_value = map[string]int32{
		"SmokeTypeNonSmoking": 0,
		"SmokeTypeSmoking":    1,
		"SmokeTypeUnknown":    2,
	}
)

func (x SmokeType) Enum() *SmokeType {
	p := new(SmokeType)
	*p = x
	return p
}

func (x SmokeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmokeType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_Book_proto_enumTypes[3].Descriptor()
}

func (SmokeType) Type() protoreflect.EnumType {
	return &file_v1_user_Book_proto_enumTypes[3]
}

func (x SmokeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmokeType.Descriptor instead.
func (SmokeType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{3}
}

type BookResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ID                string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StayFrom          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult             uint32                 `protobuf:"varint,4,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child             uint32                 `protobuf:"varint,5,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount         uint32                 `protobuf:"varint,6,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime       string                 `protobuf:"bytes,7,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"` // CheckInTime message needs to be defined
	TotalCost         uint32                 `protobuf:"varint,8,opt,name=TotalCost,proto3" json:"TotalCost,omitempty"`
	GuestData         *GuestData             `protobuf:"bytes,9,opt,name=GuestData,proto3" json:"GuestData,omitempty"`
	Plan              *DisplayPlan           `protobuf:"bytes,10,opt,name=Plan,proto3" json:"Plan,omitempty"`
	PlanStayDateInfos []*PlanStayDateInfo    `protobuf:"bytes,11,rep,name=PlanStayDateInfos,proto3" json:"PlanStayDateInfos,omitempty"`
	Note              string                 `protobuf:"bytes,12,opt,name=Note,proto3" json:"Note,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BookResponse) Reset() {
	*x = BookResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookResponse) ProtoMessage() {}

func (x *BookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookResponse.ProtoReflect.Descriptor instead.
func (*BookResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{0}
}

func (x *BookResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BookResponse) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *BookResponse) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *BookResponse) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *BookResponse) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *BookResponse) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *BookResponse) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *BookResponse) GetTotalCost() uint32 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *BookResponse) GetGuestData() *GuestData {
	if x != nil {
		return x.GuestData
	}
	return nil
}

func (x *BookResponse) GetPlan() *DisplayPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *BookResponse) GetPlanStayDateInfos() []*PlanStayDateInfo {
	if x != nil {
		return x.PlanStayDateInfos
	}
	return nil
}

func (x *BookResponse) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GuestData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName      string                 `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	FirstNameKana string                 `protobuf:"bytes,3,opt,name=FirstNameKana,proto3" json:"FirstNameKana,omitempty"`
	LastNameKana  string                 `protobuf:"bytes,4,opt,name=LastNameKana,proto3" json:"LastNameKana,omitempty"`
	CompanyName   *string                `protobuf:"bytes,5,opt,name=CompanyName,proto3,oneof" json:"CompanyName,omitempty"` // Optional field
	ZipCode       *string                `protobuf:"bytes,6,opt,name=ZipCode,proto3,oneof" json:"ZipCode,omitempty"`         // Optional field
	Prefecture    *shared.Prefecture     `protobuf:"varint,7,opt,name=Prefecture,proto3,enum=server.shared.Prefecture,oneof" json:"Prefecture,omitempty"`
	City          *string                `protobuf:"bytes,8,opt,name=City,proto3,oneof" json:"City,omitempty"`       // Optional field
	Address       *string                `protobuf:"bytes,9,opt,name=Address,proto3,oneof" json:"Address,omitempty"` // Optional field
	Tel           *string                `protobuf:"bytes,10,opt,name=Tel,proto3,oneof" json:"Tel,omitempty"`        // Optional field
	Mail          string                 `protobuf:"bytes,11,opt,name=Mail,proto3" json:"Mail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuestData) Reset() {
	*x = GuestData{}
	mi := &file_v1_user_Book_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestData) ProtoMessage() {}

func (x *GuestData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestData.ProtoReflect.Descriptor instead.
func (*GuestData) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{1}
}

func (x *GuestData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GuestData) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GuestData) GetFirstNameKana() string {
	if x != nil {
		return x.FirstNameKana
	}
	return ""
}

func (x *GuestData) GetLastNameKana() string {
	if x != nil {
		return x.LastNameKana
	}
	return ""
}

func (x *GuestData) GetCompanyName() string {
	if x != nil && x.CompanyName != nil {
		return *x.CompanyName
	}
	return ""
}

func (x *GuestData) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *GuestData) GetPrefecture() shared.Prefecture {
	if x != nil && x.Prefecture != nil {
		return *x.Prefecture
	}
	return shared.Prefecture(0)
}

func (x *GuestData) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *GuestData) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *GuestData) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *GuestData) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

type RequestPlan struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ID                    string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                 string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Price                 uint32                 `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	ImageURL              string                 `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	RoomType              RoomType               `protobuf:"varint,5,opt,name=RoomType,proto3,enum=server.user.RoomType" json:"RoomType,omitempty"`
	MealTypes             []MealType             `protobuf:"varint,6,rep,packed,name=MealTypes,proto3,enum=server.user.MealType" json:"MealTypes,omitempty"`
	SmokeType             SmokeType              `protobuf:"varint,7,opt,name=SmokeType,proto3,enum=server.user.SmokeType" json:"SmokeType,omitempty"`
	OverView              string                 `protobuf:"bytes,8,opt,name=OverView,proto3" json:"OverView,omitempty"`
	StoreID               string                 `protobuf:"bytes,9,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	TlBookingRoomTypeCode string                 `protobuf:"bytes,10,opt,name=TlBookingRoomTypeCode,proto3" json:"TlBookingRoomTypeCode,omitempty"`
	TlBookingRoomTypeName string                 `protobuf:"bytes,11,opt,name=TlBookingRoomTypeName,proto3" json:"TlBookingRoomTypeName,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RequestPlan) Reset() {
	*x = RequestPlan{}
	mi := &file_v1_user_Book_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlan) ProtoMessage() {}

func (x *RequestPlan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlan.ProtoReflect.Descriptor instead.
func (*RequestPlan) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{2}
}

func (x *RequestPlan) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RequestPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RequestPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *RequestPlan) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *RequestPlan) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_RoomTypeUnknown
}

func (x *RequestPlan) GetMealTypes() []MealType {
	if x != nil {
		return x.MealTypes
	}
	return nil
}

func (x *RequestPlan) GetSmokeType() SmokeType {
	if x != nil {
		return x.SmokeType
	}
	return SmokeType_SmokeTypeNonSmoking
}

func (x *RequestPlan) GetOverView() string {
	if x != nil {
		return x.OverView
	}
	return ""
}

func (x *RequestPlan) GetStoreID() string {
	if x != nil {
		return x.StoreID
	}
	return ""
}

func (x *RequestPlan) GetTlBookingRoomTypeCode() string {
	if x != nil {
		return x.TlBookingRoomTypeCode
	}
	return ""
}

func (x *RequestPlan) GetTlBookingRoomTypeName() string {
	if x != nil {
		return x.TlBookingRoomTypeName
	}
	return ""
}

type DisplayPlan struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ID                    string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title                 string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Price                 uint32                 `protobuf:"varint,3,opt,name=Price,proto3" json:"Price,omitempty"`
	ImageURL              string                 `protobuf:"bytes,4,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	RoomType              RoomType               `protobuf:"varint,5,opt,name=RoomType,proto3,enum=server.user.RoomType" json:"RoomType,omitempty"`
	RoomTypeName          string                 `protobuf:"bytes,6,opt,name=RoomTypeName,proto3" json:"RoomTypeName,omitempty"`
	MealTypes             []MealType             `protobuf:"varint,7,rep,packed,name=MealTypes,proto3,enum=server.user.MealType" json:"MealTypes,omitempty"`
	MealTypeName          string                 `protobuf:"bytes,8,opt,name=MealTypeName,proto3" json:"MealTypeName,omitempty"`
	SmokeType             SmokeType              `protobuf:"varint,9,opt,name=SmokeType,proto3,enum=server.user.SmokeType" json:"SmokeType,omitempty"`
	SmokeTypeName         string                 `protobuf:"bytes,10,opt,name=SmokeTypeName,proto3" json:"SmokeTypeName,omitempty"`
	OverView              string                 `protobuf:"bytes,11,opt,name=OverView,proto3" json:"OverView,omitempty"`
	StoreID               string                 `protobuf:"bytes,12,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	StoreName             string                 `protobuf:"bytes,13,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreBranchName       *string                `protobuf:"bytes,14,opt,name=StoreBranchName,proto3,oneof" json:"StoreBranchName,omitempty"`
	TlBookingRoomTypeCode string                 `protobuf:"bytes,15,opt,name=TlBookingRoomTypeCode,proto3" json:"TlBookingRoomTypeCode,omitempty"` // 予約システムの部屋タイプコード 詳細取得時に使用
	TlBookingRoomTypeName string                 `protobuf:"bytes,16,opt,name=TlBookingRoomTypeName,proto3" json:"TlBookingRoomTypeName,omitempty"` // 予約システムの部屋タイプコード 詳細取得時に使用
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DisplayPlan) Reset() {
	*x = DisplayPlan{}
	mi := &file_v1_user_Book_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayPlan) ProtoMessage() {}

func (x *DisplayPlan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayPlan.ProtoReflect.Descriptor instead.
func (*DisplayPlan) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{3}
}

func (x *DisplayPlan) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DisplayPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DisplayPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplayPlan) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *DisplayPlan) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_RoomTypeUnknown
}

func (x *DisplayPlan) GetRoomTypeName() string {
	if x != nil {
		return x.RoomTypeName
	}
	return ""
}

func (x *DisplayPlan) GetMealTypes() []MealType {
	if x != nil {
		return x.MealTypes
	}
	return nil
}

func (x *DisplayPlan) GetMealTypeName() string {
	if x != nil {
		return x.MealTypeName
	}
	return ""
}

func (x *DisplayPlan) GetSmokeType() SmokeType {
	if x != nil {
		return x.SmokeType
	}
	return SmokeType_SmokeTypeNonSmoking
}

func (x *DisplayPlan) GetSmokeTypeName() string {
	if x != nil {
		return x.SmokeTypeName
	}
	return ""
}

func (x *DisplayPlan) GetOverView() string {
	if x != nil {
		return x.OverView
	}
	return ""
}

func (x *DisplayPlan) GetStoreID() string {
	if x != nil {
		return x.StoreID
	}
	return ""
}

func (x *DisplayPlan) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *DisplayPlan) GetStoreBranchName() string {
	if x != nil && x.StoreBranchName != nil {
		return *x.StoreBranchName
	}
	return ""
}

func (x *DisplayPlan) GetTlBookingRoomTypeCode() string {
	if x != nil {
		return x.TlBookingRoomTypeCode
	}
	return ""
}

func (x *DisplayPlan) GetTlBookingRoomTypeName() string {
	if x != nil {
		return x.TlBookingRoomTypeName
	}
	return ""
}

type DisplayPlanWithSearchResultOption struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Plan                 *DisplayPlan           `protobuf:"bytes,1,opt,name=Plan,proto3" json:"Plan,omitempty"`
	MinimumPrice         uint32                 `protobuf:"varint,2,opt,name=MinimumPrice,proto3" json:"MinimumPrice,omitempty"`                                           // 最低価格
	PricePerCategory     PricePerCategory       `protobuf:"varint,3,opt,name=PricePerCategory,proto3,enum=server.user.PricePerCategory" json:"PricePerCategory,omitempty"` // 何当たりの価格か
	PricePerCategoryName string                 `protobuf:"bytes,4,opt,name=PricePerCategoryName,proto3" json:"PricePerCategoryName,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DisplayPlanWithSearchResultOption) Reset() {
	*x = DisplayPlanWithSearchResultOption{}
	mi := &file_v1_user_Book_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayPlanWithSearchResultOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayPlanWithSearchResultOption) ProtoMessage() {}

func (x *DisplayPlanWithSearchResultOption) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayPlanWithSearchResultOption.ProtoReflect.Descriptor instead.
func (*DisplayPlanWithSearchResultOption) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{4}
}

func (x *DisplayPlanWithSearchResultOption) GetPlan() *DisplayPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *DisplayPlanWithSearchResultOption) GetMinimumPrice() uint32 {
	if x != nil {
		return x.MinimumPrice
	}
	return 0
}

func (x *DisplayPlanWithSearchResultOption) GetPricePerCategory() PricePerCategory {
	if x != nil {
		return x.PricePerCategory
	}
	return PricePerCategory_PricePerNight
}

func (x *DisplayPlanWithSearchResultOption) GetPricePerCategoryName() string {
	if x != nil {
		return x.PricePerCategoryName
	}
	return ""
}

type PlanStayDateInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StayDate           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=StayDate,proto3" json:"StayDate,omitempty"`
	StayDateTotalPrice uint32                 `protobuf:"varint,2,opt,name=StayDateTotalPrice,proto3" json:"StayDateTotalPrice,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlanStayDateInfo) Reset() {
	*x = PlanStayDateInfo{}
	mi := &file_v1_user_Book_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanStayDateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanStayDateInfo) ProtoMessage() {}

func (x *PlanStayDateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanStayDateInfo.ProtoReflect.Descriptor instead.
func (*PlanStayDateInfo) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{5}
}

func (x *PlanStayDateInfo) GetStayDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StayDate
	}
	return nil
}

func (x *PlanStayDateInfo) GetStayDateTotalPrice() uint32 {
	if x != nil {
		return x.StayDateTotalPrice
	}
	return 0
}

type ReserveRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StayFrom          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult             uint32                 `protobuf:"varint,3,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child             uint32                 `protobuf:"varint,4,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount         uint32                 `protobuf:"varint,5,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime       string                 `protobuf:"bytes,6,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"`
	TotalCost         uint32                 `protobuf:"varint,7,opt,name=TotalCost,proto3" json:"TotalCost,omitempty"`
	GuestData         *GuestData             `protobuf:"bytes,8,opt,name=GuestData,proto3" json:"GuestData,omitempty"`
	RequestPlan       *RequestPlan           `protobuf:"bytes,9,opt,name=RequestPlan,proto3" json:"RequestPlan,omitempty"` //プランデータをそのままDBに入れるので必須
	Note              *string                `protobuf:"bytes,11,opt,name=Note,proto3,oneof" json:"Note,omitempty"`
	PlanStayDateInfos []*PlanStayDateInfo    `protobuf:"bytes,12,rep,name=PlanStayDateInfos,proto3" json:"PlanStayDateInfos,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReserveRequest) Reset() {
	*x = ReserveRequest{}
	mi := &file_v1_user_Book_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRequest) ProtoMessage() {}

func (x *ReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRequest.ProtoReflect.Descriptor instead.
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{6}
}

func (x *ReserveRequest) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *ReserveRequest) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *ReserveRequest) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *ReserveRequest) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *ReserveRequest) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *ReserveRequest) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *ReserveRequest) GetTotalCost() uint32 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *ReserveRequest) GetGuestData() *GuestData {
	if x != nil {
		return x.GuestData
	}
	return nil
}

func (x *ReserveRequest) GetRequestPlan() *RequestPlan {
	if x != nil {
		return x.RequestPlan
	}
	return nil
}

func (x *ReserveRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *ReserveRequest) GetPlanStayDateInfos() []*PlanStayDateInfo {
	if x != nil {
		return x.PlanStayDateInfos
	}
	return nil
}

type BookIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookIDRequest) Reset() {
	*x = BookIDRequest{}
	mi := &file_v1_user_Book_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookIDRequest) ProtoMessage() {}

func (x *BookIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookIDRequest.ProtoReflect.Descriptor instead.
func (*BookIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{7}
}

func (x *BookIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type BooksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Books         []*BookResponse        `protobuf:"bytes,1,rep,name=Books,proto3" json:"Books,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooksResponse) Reset() {
	*x = BooksResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooksResponse) ProtoMessage() {}

func (x *BooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooksResponse.ProtoReflect.Descriptor instead.
func (*BooksResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{8}
}

func (x *BooksResponse) GetBooks() []*BookResponse {
	if x != nil {
		return x.Books
	}
	return nil
}

type SearchPlanResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Plans         []*DisplayPlanWithSearchResultOption `protobuf:"bytes,1,rep,name=Plans,proto3" json:"Plans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPlanResponse) Reset() {
	*x = SearchPlanResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPlanResponse) ProtoMessage() {}

func (x *SearchPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPlanResponse.ProtoReflect.Descriptor instead.
func (*SearchPlanResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{9}
}

func (x *SearchPlanResponse) GetPlans() []*DisplayPlanWithSearchResultOption {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PlansResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plans         []*DisplayPlan         `protobuf:"bytes,1,rep,name=Plans,proto3" json:"Plans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlansResponse) Reset() {
	*x = PlansResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansResponse) ProtoMessage() {}

func (x *PlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansResponse.ProtoReflect.Descriptor instead.
func (*PlansResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{10}
}

func (x *PlansResponse) GetPlans() []*DisplayPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PlanSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreIDs      []string               `protobuf:"bytes,1,rep,name=StoreIDs,proto3" json:"StoreIDs,omitempty"`
	StayFrom      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult         uint32                 `protobuf:"varint,4,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child         uint32                 `protobuf:"varint,5,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount     uint32                 `protobuf:"varint,6,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	CheckInTime   string                 `protobuf:"bytes,7,opt,name=CheckInTime,proto3" json:"CheckInTime,omitempty"`
	SmokeTypes    []SmokeType            `protobuf:"varint,8,rep,packed,name=SmokeTypes,proto3,enum=server.user.SmokeType" json:"SmokeTypes,omitempty"`
	MealTypes     []MealType             `protobuf:"varint,9,rep,packed,name=MealTypes,proto3,enum=server.user.MealType" json:"MealTypes,omitempty"`
	RoomTypes     []RoomType             `protobuf:"varint,10,rep,packed,name=RoomTypes,proto3,enum=server.user.RoomType" json:"RoomTypes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanSearchRequest) Reset() {
	*x = PlanSearchRequest{}
	mi := &file_v1_user_Book_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanSearchRequest) ProtoMessage() {}

func (x *PlanSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanSearchRequest.ProtoReflect.Descriptor instead.
func (*PlanSearchRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{11}
}

func (x *PlanSearchRequest) GetStoreIDs() []string {
	if x != nil {
		return x.StoreIDs
	}
	return nil
}

func (x *PlanSearchRequest) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *PlanSearchRequest) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *PlanSearchRequest) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *PlanSearchRequest) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *PlanSearchRequest) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *PlanSearchRequest) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *PlanSearchRequest) GetSmokeTypes() []SmokeType {
	if x != nil {
		return x.SmokeTypes
	}
	return nil
}

func (x *PlanSearchRequest) GetMealTypes() []MealType {
	if x != nil {
		return x.MealTypes
	}
	return nil
}

func (x *PlanSearchRequest) GetRoomTypes() []RoomType {
	if x != nil {
		return x.RoomTypes
	}
	return nil
}

type PlanDetailRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PlanID                string                 `protobuf:"bytes,1,opt,name=PlanID,proto3" json:"PlanID,omitempty"`
	StayFrom              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=StayFrom,proto3" json:"StayFrom,omitempty"`
	StayTo                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StayTo,proto3" json:"StayTo,omitempty"`
	Adult                 uint32                 `protobuf:"varint,4,opt,name=Adult,proto3" json:"Adult,omitempty"`
	Child                 uint32                 `protobuf:"varint,5,opt,name=Child,proto3" json:"Child,omitempty"`
	RoomCount             uint32                 `protobuf:"varint,6,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	StayStoreID           string                 `protobuf:"bytes,7,opt,name=StayStoreID,proto3" json:"StayStoreID,omitempty"`
	TlBookingRoomTypeCode string                 `protobuf:"bytes,8,opt,name=TlBookingRoomTypeCode,proto3" json:"TlBookingRoomTypeCode,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PlanDetailRequest) Reset() {
	*x = PlanDetailRequest{}
	mi := &file_v1_user_Book_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanDetailRequest) ProtoMessage() {}

func (x *PlanDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanDetailRequest.ProtoReflect.Descriptor instead.
func (*PlanDetailRequest) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{12}
}

func (x *PlanDetailRequest) GetPlanID() string {
	if x != nil {
		return x.PlanID
	}
	return ""
}

func (x *PlanDetailRequest) GetStayFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StayFrom
	}
	return nil
}

func (x *PlanDetailRequest) GetStayTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StayTo
	}
	return nil
}

func (x *PlanDetailRequest) GetAdult() uint32 {
	if x != nil {
		return x.Adult
	}
	return 0
}

func (x *PlanDetailRequest) GetChild() uint32 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *PlanDetailRequest) GetRoomCount() uint32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *PlanDetailRequest) GetStayStoreID() string {
	if x != nil {
		return x.StayStoreID
	}
	return ""
}

func (x *PlanDetailRequest) GetTlBookingRoomTypeCode() string {
	if x != nil {
		return x.TlBookingRoomTypeCode
	}
	return ""
}

type PlanStayDetailResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Plan              *DisplayPlan           `protobuf:"bytes,1,opt,name=Plan,proto3" json:"Plan,omitempty"`
	PlanStayDateInfos []*PlanStayDateInfo    `protobuf:"bytes,2,rep,name=PlanStayDateInfos,proto3" json:"PlanStayDateInfos,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PlanStayDetailResponse) Reset() {
	*x = PlanStayDetailResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanStayDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanStayDetailResponse) ProtoMessage() {}

func (x *PlanStayDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanStayDetailResponse.ProtoReflect.Descriptor instead.
func (*PlanStayDetailResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{13}
}

func (x *PlanStayDetailResponse) GetPlan() *DisplayPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *PlanStayDetailResponse) GetPlanStayDateInfos() []*PlanStayDateInfo {
	if x != nil {
		return x.PlanStayDateInfos
	}
	return nil
}

type BookMentenanceInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsMentenance  bool                   `protobuf:"varint,1,opt,name=IsMentenance,proto3" json:"IsMentenance,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookMentenanceInfoResponse) Reset() {
	*x = BookMentenanceInfoResponse{}
	mi := &file_v1_user_Book_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookMentenanceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMentenanceInfoResponse) ProtoMessage() {}

func (x *BookMentenanceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_Book_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMentenanceInfoResponse.ProtoReflect.Descriptor instead.
func (*BookMentenanceInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_user_Book_proto_rawDescGZIP(), []int{14}
}

func (x *BookMentenanceInfoResponse) GetIsMentenance() bool {
	if x != nil {
		return x.IsMentenance
	}
	return false
}

func (x *BookMentenanceInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_v1_user_Book_proto protoreflect.FileDescriptor

const file_v1_user_Book_proto_rawDesc = "" +
	"\n" +
	"\x12v1/user/Book.proto\x12\vserver.user\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1av1/shared/Prefecture.proto\"\xd9\x03\n" +
	"\fBookResponse\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x126\n" +
	"\bStayFrom\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bStayFrom\x122\n" +
	"\x06StayTo\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06StayTo\x12\x14\n" +
	"\x05Adult\x18\x04 \x01(\rR\x05Adult\x12\x14\n" +
	"\x05Child\x18\x05 \x01(\rR\x05Child\x12\x1c\n" +
	"\tRoomCount\x18\x06 \x01(\rR\tRoomCount\x12 \n" +
	"\vCheckInTime\x18\a \x01(\tR\vCheckInTime\x12\x1c\n" +
	"\tTotalCost\x18\b \x01(\rR\tTotalCost\x124\n" +
	"\tGuestData\x18\t \x01(\v2\x16.server.user.GuestDataR\tGuestData\x12,\n" +
	"\x04Plan\x18\n" +
	" \x01(\v2\x18.server.user.DisplayPlanR\x04Plan\x12K\n" +
	"\x11PlanStayDateInfos\x18\v \x03(\v2\x1d.server.user.PlanStayDateInfoR\x11PlanStayDateInfos\x12\x12\n" +
	"\x04Note\x18\f \x01(\tR\x04Note\"\xc0\x03\n" +
	"\tGuestData\x12\x1c\n" +
	"\tFirstName\x18\x01 \x01(\tR\tFirstName\x12\x1a\n" +
	"\bLastName\x18\x02 \x01(\tR\bLastName\x12$\n" +
	"\rFirstNameKana\x18\x03 \x01(\tR\rFirstNameKana\x12\"\n" +
	"\fLastNameKana\x18\x04 \x01(\tR\fLastNameKana\x12%\n" +
	"\vCompanyName\x18\x05 \x01(\tH\x00R\vCompanyName\x88\x01\x01\x12\x1d\n" +
	"\aZipCode\x18\x06 \x01(\tH\x01R\aZipCode\x88\x01\x01\x12>\n" +
	"\n" +
	"Prefecture\x18\a \x01(\x0e2\x19.server.shared.PrefectureH\x02R\n" +
	"Prefecture\x88\x01\x01\x12\x17\n" +
	"\x04City\x18\b \x01(\tH\x03R\x04City\x88\x01\x01\x12\x1d\n" +
	"\aAddress\x18\t \x01(\tH\x04R\aAddress\x88\x01\x01\x12\x15\n" +
	"\x03Tel\x18\n" +
	" \x01(\tH\x05R\x03Tel\x88\x01\x01\x12\x12\n" +
	"\x04Mail\x18\v \x01(\tR\x04MailB\x0e\n" +
	"\f_CompanyNameB\n" +
	"\n" +
	"\b_ZipCodeB\r\n" +
	"\v_PrefectureB\a\n" +
	"\x05_CityB\n" +
	"\n" +
	"\b_AddressB\x06\n" +
	"\x04_Tel\"\xa5\x03\n" +
	"\vRequestPlan\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12\x14\n" +
	"\x05Price\x18\x03 \x01(\rR\x05Price\x12\x1a\n" +
	"\bImageURL\x18\x04 \x01(\tR\bImageURL\x121\n" +
	"\bRoomType\x18\x05 \x01(\x0e2\x15.server.user.RoomTypeR\bRoomType\x123\n" +
	"\tMealTypes\x18\x06 \x03(\x0e2\x15.server.user.MealTypeR\tMealTypes\x124\n" +
	"\tSmokeType\x18\a \x01(\x0e2\x16.server.user.SmokeTypeR\tSmokeType\x12\x1a\n" +
	"\bOverView\x18\b \x01(\tR\bOverView\x12\x18\n" +
	"\aStoreID\x18\t \x01(\tR\aStoreID\x124\n" +
	"\x15TlBookingRoomTypeCode\x18\n" +
	" \x01(\tR\x15TlBookingRoomTypeCode\x124\n" +
	"\x15TlBookingRoomTypeName\x18\v \x01(\tR\x15TlBookingRoomTypeName\"\xf4\x04\n" +
	"\vDisplayPlan\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x14\n" +
	"\x05Title\x18\x02 \x01(\tR\x05Title\x12\x14\n" +
	"\x05Price\x18\x03 \x01(\rR\x05Price\x12\x1a\n" +
	"\bImageURL\x18\x04 \x01(\tR\bImageURL\x121\n" +
	"\bRoomType\x18\x05 \x01(\x0e2\x15.server.user.RoomTypeR\bRoomType\x12\"\n" +
	"\fRoomTypeName\x18\x06 \x01(\tR\fRoomTypeName\x123\n" +
	"\tMealTypes\x18\a \x03(\x0e2\x15.server.user.MealTypeR\tMealTypes\x12\"\n" +
	"\fMealTypeName\x18\b \x01(\tR\fMealTypeName\x124\n" +
	"\tSmokeType\x18\t \x01(\x0e2\x16.server.user.SmokeTypeR\tSmokeType\x12$\n" +
	"\rSmokeTypeName\x18\n" +
	" \x01(\tR\rSmokeTypeName\x12\x1a\n" +
	"\bOverView\x18\v \x01(\tR\bOverView\x12\x18\n" +
	"\aStoreID\x18\f \x01(\tR\aStoreID\x12\x1c\n" +
	"\tStoreName\x18\r \x01(\tR\tStoreName\x12-\n" +
	"\x0fStoreBranchName\x18\x0e \x01(\tH\x00R\x0fStoreBranchName\x88\x01\x01\x124\n" +
	"\x15TlBookingRoomTypeCode\x18\x0f \x01(\tR\x15TlBookingRoomTypeCode\x124\n" +
	"\x15TlBookingRoomTypeName\x18\x10 \x01(\tR\x15TlBookingRoomTypeNameB\x12\n" +
	"\x10_StoreBranchName\"\xf4\x01\n" +
	"!DisplayPlanWithSearchResultOption\x12,\n" +
	"\x04Plan\x18\x01 \x01(\v2\x18.server.user.DisplayPlanR\x04Plan\x12\"\n" +
	"\fMinimumPrice\x18\x02 \x01(\rR\fMinimumPrice\x12I\n" +
	"\x10PricePerCategory\x18\x03 \x01(\x0e2\x1d.server.user.PricePerCategoryR\x10PricePerCategory\x122\n" +
	"\x14PricePerCategoryName\x18\x04 \x01(\tR\x14PricePerCategoryName\"z\n" +
	"\x10PlanStayDateInfo\x126\n" +
	"\bStayDate\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bStayDate\x12.\n" +
	"\x12StayDateTotalPrice\x18\x02 \x01(\rR\x12StayDateTotalPrice\"\xe7\x03\n" +
	"\x0eReserveRequest\x126\n" +
	"\bStayFrom\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bStayFrom\x122\n" +
	"\x06StayTo\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06StayTo\x12\x14\n" +
	"\x05Adult\x18\x03 \x01(\rR\x05Adult\x12\x14\n" +
	"\x05Child\x18\x04 \x01(\rR\x05Child\x12\x1c\n" +
	"\tRoomCount\x18\x05 \x01(\rR\tRoomCount\x12 \n" +
	"\vCheckInTime\x18\x06 \x01(\tR\vCheckInTime\x12\x1c\n" +
	"\tTotalCost\x18\a \x01(\rR\tTotalCost\x124\n" +
	"\tGuestData\x18\b \x01(\v2\x16.server.user.GuestDataR\tGuestData\x12:\n" +
	"\vRequestPlan\x18\t \x01(\v2\x18.server.user.RequestPlanR\vRequestPlan\x12\x17\n" +
	"\x04Note\x18\v \x01(\tH\x00R\x04Note\x88\x01\x01\x12K\n" +
	"\x11PlanStayDateInfos\x18\f \x03(\v2\x1d.server.user.PlanStayDateInfoR\x11PlanStayDateInfosB\a\n" +
	"\x05_Note\"\x1f\n" +
	"\rBookIDRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\"@\n" +
	"\rBooksResponse\x12/\n" +
	"\x05Books\x18\x01 \x03(\v2\x19.server.user.BookResponseR\x05Books\"Z\n" +
	"\x12SearchPlanResponse\x12D\n" +
	"\x05Plans\x18\x01 \x03(\v2..server.user.DisplayPlanWithSearchResultOptionR\x05Plans\"?\n" +
	"\rPlansResponse\x12.\n" +
	"\x05Plans\x18\x01 \x03(\v2\x18.server.user.DisplayPlanR\x05Plans\"\xa9\x03\n" +
	"\x11PlanSearchRequest\x12\x1a\n" +
	"\bStoreIDs\x18\x01 \x03(\tR\bStoreIDs\x126\n" +
	"\bStayFrom\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bStayFrom\x122\n" +
	"\x06StayTo\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06StayTo\x12\x14\n" +
	"\x05Adult\x18\x04 \x01(\rR\x05Adult\x12\x14\n" +
	"\x05Child\x18\x05 \x01(\rR\x05Child\x12\x1c\n" +
	"\tRoomCount\x18\x06 \x01(\rR\tRoomCount\x12 \n" +
	"\vCheckInTime\x18\a \x01(\tR\vCheckInTime\x126\n" +
	"\n" +
	"SmokeTypes\x18\b \x03(\x0e2\x16.server.user.SmokeTypeR\n" +
	"SmokeTypes\x123\n" +
	"\tMealTypes\x18\t \x03(\x0e2\x15.server.user.MealTypeR\tMealTypes\x123\n" +
	"\tRoomTypes\x18\n" +
	" \x03(\x0e2\x15.server.user.RoomTypeR\tRoomTypes\"\xb9\x02\n" +
	"\x11PlanDetailRequest\x12\x16\n" +
	"\x06PlanID\x18\x01 \x01(\tR\x06PlanID\x126\n" +
	"\bStayFrom\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bStayFrom\x122\n" +
	"\x06StayTo\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06StayTo\x12\x14\n" +
	"\x05Adult\x18\x04 \x01(\rR\x05Adult\x12\x14\n" +
	"\x05Child\x18\x05 \x01(\rR\x05Child\x12\x1c\n" +
	"\tRoomCount\x18\x06 \x01(\rR\tRoomCount\x12 \n" +
	"\vStayStoreID\x18\a \x01(\tR\vStayStoreID\x124\n" +
	"\x15TlBookingRoomTypeCode\x18\b \x01(\tR\x15TlBookingRoomTypeCode\"\x93\x01\n" +
	"\x16PlanStayDetailResponse\x12,\n" +
	"\x04Plan\x18\x01 \x01(\v2\x18.server.user.DisplayPlanR\x04Plan\x12K\n" +
	"\x11PlanStayDateInfos\x18\x02 \x03(\v2\x1d.server.user.PlanStayDateInfoR\x11PlanStayDateInfos\"Z\n" +
	"\x1aBookMentenanceInfoResponse\x12\"\n" +
	"\fIsMentenance\x18\x01 \x01(\bR\fIsMentenance\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage*U\n" +
	"\x10PricePerCategory\x12\x11\n" +
	"\rPricePerNight\x10\x00\x12\x12\n" +
	"\x0ePricePerPerson\x10\x01\x12\x1a\n" +
	"\x16PricePerNightAndPerson\x10\x02*#\n" +
	"\bMealType\x12\v\n" +
	"\aMorning\x10\x00\x12\n" +
	"\n" +
	"\x06Dinner\x10\x01*\xda\x01\n" +
	"\bRoomType\x12\x13\n" +
	"\x0fRoomTypeUnknown\x10\x00\x12\x12\n" +
	"\x0eRoomTypeSingle\x10\x01\x12\x16\n" +
	"\x12RoomTypeSemiDouble\x10\x02\x12\x12\n" +
	"\x0eRoomTypeDouble\x10\x03\x12\x10\n" +
	"\fRoomTypeTwin\x10\x04\x12\x12\n" +
	"\x0eRoomTypeFourth\x10\x05\x12\x12\n" +
	"\x0eRoomTypeTatami\x10\x06\x12\x18\n" +
	"\x14RoomTypeTatamiAndBed\x10\a\x12\x12\n" +
	"\x0eRoomTypeTriple\x10\b\x12\x11\n" +
	"\rRoomTypeOther\x10\t*P\n" +
	"\tSmokeType\x12\x17\n" +
	"\x13SmokeTypeNonSmoking\x10\x00\x12\x14\n" +
	"\x10SmokeTypeSmoking\x10\x01\x12\x14\n" +
	"\x10SmokeTypeUnknown\x10\x022\xf5\x02\n" +
	"\x0eBookController\x12A\n" +
	"\tGetMyBook\x12\x16.google.protobuf.Empty\x1a\x1a.server.user.BooksResponse\"\x00\x12F\n" +
	"\vGetBookByID\x12\x1a.server.user.BookIDRequest\x1a\x19.server.user.BookResponse\"\x00\x12>\n" +
	"\x06Cancel\x12\x1a.server.user.BookIDRequest\x1a\x16.google.protobuf.Empty\"\x00\x12@\n" +
	"\aReserve\x12\x1b.server.user.ReserveRequest\x1a\x16.google.protobuf.Empty\"\x00\x12V\n" +
	"\x11GetMentenanceInfo\x12\x16.google.protobuf.Empty\x1a'.server.user.BookMentenanceInfoResponse\"\x002\xb1\x01\n" +
	"\x0ePlanController\x12K\n" +
	"\x06Search\x12\x1e.server.user.PlanSearchRequest\x1a\x1f.server.user.SearchPlanResponse\"\x00\x12R\n" +
	"\tGetDetail\x12\x1e.server.user.PlanDetailRequest\x1a#.server.user.PlanStayDetailResponse\"\x00B}\n" +
	"\x0fcom.server.userB\tBookProtoP\x01Z\x12server/api/v1/user\xa2\x02\x03SUX\xaa\x02\vServer.User\xca\x02\vServer\\User\xe2\x02\x17Server\\User\\GPBMetadata\xea\x02\fServer::Userb\x06proto3"

var (
	file_v1_user_Book_proto_rawDescOnce sync.Once
	file_v1_user_Book_proto_rawDescData []byte
)

func file_v1_user_Book_proto_rawDescGZIP() []byte {
	file_v1_user_Book_proto_rawDescOnce.Do(func() {
		file_v1_user_Book_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_user_Book_proto_rawDesc), len(file_v1_user_Book_proto_rawDesc)))
	})
	return file_v1_user_Book_proto_rawDescData
}

var file_v1_user_Book_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_v1_user_Book_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_v1_user_Book_proto_goTypes = []any{
	(PricePerCategory)(0),                     // 0: server.user.PricePerCategory
	(MealType)(0),                             // 1: server.user.MealType
	(RoomType)(0),                             // 2: server.user.RoomType
	(SmokeType)(0),                            // 3: server.user.SmokeType
	(*BookResponse)(nil),                      // 4: server.user.BookResponse
	(*GuestData)(nil),                         // 5: server.user.GuestData
	(*RequestPlan)(nil),                       // 6: server.user.RequestPlan
	(*DisplayPlan)(nil),                       // 7: server.user.DisplayPlan
	(*DisplayPlanWithSearchResultOption)(nil), // 8: server.user.DisplayPlanWithSearchResultOption
	(*PlanStayDateInfo)(nil),                  // 9: server.user.PlanStayDateInfo
	(*ReserveRequest)(nil),                    // 10: server.user.ReserveRequest
	(*BookIDRequest)(nil),                     // 11: server.user.BookIDRequest
	(*BooksResponse)(nil),                     // 12: server.user.BooksResponse
	(*SearchPlanResponse)(nil),                // 13: server.user.SearchPlanResponse
	(*PlansResponse)(nil),                     // 14: server.user.PlansResponse
	(*PlanSearchRequest)(nil),                 // 15: server.user.PlanSearchRequest
	(*PlanDetailRequest)(nil),                 // 16: server.user.PlanDetailRequest
	(*PlanStayDetailResponse)(nil),            // 17: server.user.PlanStayDetailResponse
	(*BookMentenanceInfoResponse)(nil),        // 18: server.user.BookMentenanceInfoResponse
	(*timestamppb.Timestamp)(nil),             // 19: google.protobuf.Timestamp
	(shared.Prefecture)(0),                    // 20: server.shared.Prefecture
	(*emptypb.Empty)(nil),                     // 21: google.protobuf.Empty
}
var file_v1_user_Book_proto_depIdxs = []int32{
	19, // 0: server.user.BookResponse.StayFrom:type_name -> google.protobuf.Timestamp
	19, // 1: server.user.BookResponse.StayTo:type_name -> google.protobuf.Timestamp
	5,  // 2: server.user.BookResponse.GuestData:type_name -> server.user.GuestData
	7,  // 3: server.user.BookResponse.Plan:type_name -> server.user.DisplayPlan
	9,  // 4: server.user.BookResponse.PlanStayDateInfos:type_name -> server.user.PlanStayDateInfo
	20, // 5: server.user.GuestData.Prefecture:type_name -> server.shared.Prefecture
	2,  // 6: server.user.RequestPlan.RoomType:type_name -> server.user.RoomType
	1,  // 7: server.user.RequestPlan.MealTypes:type_name -> server.user.MealType
	3,  // 8: server.user.RequestPlan.SmokeType:type_name -> server.user.SmokeType
	2,  // 9: server.user.DisplayPlan.RoomType:type_name -> server.user.RoomType
	1,  // 10: server.user.DisplayPlan.MealTypes:type_name -> server.user.MealType
	3,  // 11: server.user.DisplayPlan.SmokeType:type_name -> server.user.SmokeType
	7,  // 12: server.user.DisplayPlanWithSearchResultOption.Plan:type_name -> server.user.DisplayPlan
	0,  // 13: server.user.DisplayPlanWithSearchResultOption.PricePerCategory:type_name -> server.user.PricePerCategory
	19, // 14: server.user.PlanStayDateInfo.StayDate:type_name -> google.protobuf.Timestamp
	19, // 15: server.user.ReserveRequest.StayFrom:type_name -> google.protobuf.Timestamp
	19, // 16: server.user.ReserveRequest.StayTo:type_name -> google.protobuf.Timestamp
	5,  // 17: server.user.ReserveRequest.GuestData:type_name -> server.user.GuestData
	6,  // 18: server.user.ReserveRequest.RequestPlan:type_name -> server.user.RequestPlan
	9,  // 19: server.user.ReserveRequest.PlanStayDateInfos:type_name -> server.user.PlanStayDateInfo
	4,  // 20: server.user.BooksResponse.Books:type_name -> server.user.BookResponse
	8,  // 21: server.user.SearchPlanResponse.Plans:type_name -> server.user.DisplayPlanWithSearchResultOption
	7,  // 22: server.user.PlansResponse.Plans:type_name -> server.user.DisplayPlan
	19, // 23: server.user.PlanSearchRequest.StayFrom:type_name -> google.protobuf.Timestamp
	19, // 24: server.user.PlanSearchRequest.StayTo:type_name -> google.protobuf.Timestamp
	3,  // 25: server.user.PlanSearchRequest.SmokeTypes:type_name -> server.user.SmokeType
	1,  // 26: server.user.PlanSearchRequest.MealTypes:type_name -> server.user.MealType
	2,  // 27: server.user.PlanSearchRequest.RoomTypes:type_name -> server.user.RoomType
	19, // 28: server.user.PlanDetailRequest.StayFrom:type_name -> google.protobuf.Timestamp
	19, // 29: server.user.PlanDetailRequest.StayTo:type_name -> google.protobuf.Timestamp
	7,  // 30: server.user.PlanStayDetailResponse.Plan:type_name -> server.user.DisplayPlan
	9,  // 31: server.user.PlanStayDetailResponse.PlanStayDateInfos:type_name -> server.user.PlanStayDateInfo
	21, // 32: server.user.BookController.GetMyBook:input_type -> google.protobuf.Empty
	11, // 33: server.user.BookController.GetBookByID:input_type -> server.user.BookIDRequest
	11, // 34: server.user.BookController.Cancel:input_type -> server.user.BookIDRequest
	10, // 35: server.user.BookController.Reserve:input_type -> server.user.ReserveRequest
	21, // 36: server.user.BookController.GetMentenanceInfo:input_type -> google.protobuf.Empty
	15, // 37: server.user.PlanController.Search:input_type -> server.user.PlanSearchRequest
	16, // 38: server.user.PlanController.GetDetail:input_type -> server.user.PlanDetailRequest
	12, // 39: server.user.BookController.GetMyBook:output_type -> server.user.BooksResponse
	4,  // 40: server.user.BookController.GetBookByID:output_type -> server.user.BookResponse
	21, // 41: server.user.BookController.Cancel:output_type -> google.protobuf.Empty
	21, // 42: server.user.BookController.Reserve:output_type -> google.protobuf.Empty
	18, // 43: server.user.BookController.GetMentenanceInfo:output_type -> server.user.BookMentenanceInfoResponse
	13, // 44: server.user.PlanController.Search:output_type -> server.user.SearchPlanResponse
	17, // 45: server.user.PlanController.GetDetail:output_type -> server.user.PlanStayDetailResponse
	39, // [39:46] is the sub-list for method output_type
	32, // [32:39] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_v1_user_Book_proto_init() }
func file_v1_user_Book_proto_init() {
	if File_v1_user_Book_proto != nil {
		return
	}
	file_v1_user_Book_proto_msgTypes[1].OneofWrappers = []any{}
	file_v1_user_Book_proto_msgTypes[3].OneofWrappers = []any{}
	file_v1_user_Book_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_user_Book_proto_rawDesc), len(file_v1_user_Book_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_v1_user_Book_proto_goTypes,
		DependencyIndexes: file_v1_user_Book_proto_depIdxs,
		EnumInfos:         file_v1_user_Book_proto_enumTypes,
		MessageInfos:      file_v1_user_Book_proto_msgTypes,
	}.Build()
	File_v1_user_Book_proto = out.File
	file_v1_user_Book_proto_goTypes = nil
	file_v1_user_Book_proto_depIdxs = nil
}
