// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/shared/Prefecture.proto

package shared

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Prefecture int32

const (
	Prefecture_Unspecified Prefecture = 0
	Prefecture_Hokkaido    Prefecture = 1
	Prefecture_Aomori      Prefecture = 2
	Prefecture_Iwate       Prefecture = 3
	Prefecture_Miyagi      Prefecture = 4
	Prefecture_Akita       Prefecture = 5
	Prefecture_Yamagata    Prefecture = 6
	Prefecture_Fukushima   Prefecture = 7
	Prefecture_Ibaraki     Prefecture = 8
	Prefecture_Tochigi     Prefecture = 9
	Prefecture_Gunma       Prefecture = 10
	Prefecture_Saitama     Prefecture = 11
	Prefecture_Chiba       Prefecture = 12
	Prefecture_Tokyo       Prefecture = 13
	Prefecture_Kanagawa    Prefecture = 14
	Prefecture_Niigata     Prefecture = 15
	Prefecture_Toyama      Prefecture = 16
	Prefecture_Ishikawa    Prefecture = 17
	Prefecture_Fukui       Prefecture = 18
	Prefecture_Yamanashi   Prefecture = 19
	Prefecture_Nagano      Prefecture = 20
	Prefecture_Gifu        Prefecture = 21
	Prefecture_Shizuoka    Prefecture = 22
	Prefecture_Aichi       Prefecture = 23
	Prefecture_Mie         Prefecture = 24
	Prefecture_Shiga       Prefecture = 25
	Prefecture_Kyoto       Prefecture = 26
	Prefecture_Osaka       Prefecture = 27
	Prefecture_Hyogo       Prefecture = 28
	Prefecture_Nara        Prefecture = 29
	Prefecture_Wakayama    Prefecture = 30
	Prefecture_Tottori     Prefecture = 31
	Prefecture_Shimane     Prefecture = 32
	Prefecture_Okayama     Prefecture = 33
	Prefecture_Hiroshima   Prefecture = 34
	Prefecture_Yamaguchi   Prefecture = 35
	Prefecture_Tokushima   Prefecture = 36
	Prefecture_Kagawa      Prefecture = 37
	Prefecture_Ehime       Prefecture = 38
	Prefecture_Kochi       Prefecture = 39
	Prefecture_Fukuoka     Prefecture = 40
	Prefecture_Saga        Prefecture = 41
	Prefecture_Nagasaki    Prefecture = 42
	Prefecture_Kumamoto    Prefecture = 43
	Prefecture_Oita        Prefecture = 44
	Prefecture_Miyazaki    Prefecture = 45
	Prefecture_Kagoshima   Prefecture = 46
	Prefecture_Okinawa     Prefecture = 47
)

// Enum value maps for Prefecture.
var (
	Prefecture_name = map[int32]string{
		0:  "Unspecified",
		1:  "Hokkaido",
		2:  "Aomori",
		3:  "Iwate",
		4:  "Miyagi",
		5:  "Akita",
		6:  "Yamagata",
		7:  "Fukushima",
		8:  "Ibaraki",
		9:  "Tochigi",
		10: "Gunma",
		11: "Saitama",
		12: "Chiba",
		13: "Tokyo",
		14: "Kanagawa",
		15: "Niigata",
		16: "Toyama",
		17: "Ishikawa",
		18: "Fukui",
		19: "Yamanashi",
		20: "Nagano",
		21: "Gifu",
		22: "Shizuoka",
		23: "Aichi",
		24: "Mie",
		25: "Shiga",
		26: "Kyoto",
		27: "Osaka",
		28: "Hyogo",
		29: "Nara",
		30: "Wakayama",
		31: "Tottori",
		32: "Shimane",
		33: "Okayama",
		34: "Hiroshima",
		35: "Yamaguchi",
		36: "Tokushima",
		37: "Kagawa",
		38: "Ehime",
		39: "Kochi",
		40: "Fukuoka",
		41: "Saga",
		42: "Nagasaki",
		43: "Kumamoto",
		44: "Oita",
		45: "Miyazaki",
		46: "Kagoshima",
		47: "Okinawa",
	}
	Prefecture_value = map[string]int32{
		"Unspecified": 0,
		"Hokkaido":    1,
		"Aomori":      2,
		"Iwate":       3,
		"Miyagi":      4,
		"Akita":       5,
		"Yamagata":    6,
		"Fukushima":   7,
		"Ibaraki":     8,
		"Tochigi":     9,
		"Gunma":       10,
		"Saitama":     11,
		"Chiba":       12,
		"Tokyo":       13,
		"Kanagawa":    14,
		"Niigata":     15,
		"Toyama":      16,
		"Ishikawa":    17,
		"Fukui":       18,
		"Yamanashi":   19,
		"Nagano":      20,
		"Gifu":        21,
		"Shizuoka":    22,
		"Aichi":       23,
		"Mie":         24,
		"Shiga":       25,
		"Kyoto":       26,
		"Osaka":       27,
		"Hyogo":       28,
		"Nara":        29,
		"Wakayama":    30,
		"Tottori":     31,
		"Shimane":     32,
		"Okayama":     33,
		"Hiroshima":   34,
		"Yamaguchi":   35,
		"Tokushima":   36,
		"Kagawa":      37,
		"Ehime":       38,
		"Kochi":       39,
		"Fukuoka":     40,
		"Saga":        41,
		"Nagasaki":    42,
		"Kumamoto":    43,
		"Oita":        44,
		"Miyazaki":    45,
		"Kagoshima":   46,
		"Okinawa":     47,
	}
)

func (x Prefecture) Enum() *Prefecture {
	p := new(Prefecture)
	*p = x
	return p
}

func (x Prefecture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Prefecture) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_shared_Prefecture_proto_enumTypes[0].Descriptor()
}

func (Prefecture) Type() protoreflect.EnumType {
	return &file_v1_shared_Prefecture_proto_enumTypes[0]
}

func (x Prefecture) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Prefecture.Descriptor instead.
func (Prefecture) EnumDescriptor() ([]byte, []int) {
	return file_v1_shared_Prefecture_proto_rawDescGZIP(), []int{0}
}

var File_v1_shared_Prefecture_proto protoreflect.FileDescriptor

const file_v1_shared_Prefecture_proto_rawDesc = "" +
	"\n" +
	"\x1av1/shared/Prefecture.proto\x12\rserver.shared*\xe6\x04\n" +
	"\n" +
	"Prefecture\x12\x0f\n" +
	"\vUnspecified\x10\x00\x12\f\n" +
	"\bHokkaido\x10\x01\x12\n" +
	"\n" +
	"\x06Aomori\x10\x02\x12\t\n" +
	"\x05Iwate\x10\x03\x12\n" +
	"\n" +
	"\x06Miyagi\x10\x04\x12\t\n" +
	"\x05Akita\x10\x05\x12\f\n" +
	"\bYamagata\x10\x06\x12\r\n" +
	"\tFukushima\x10\a\x12\v\n" +
	"\aIbaraki\x10\b\x12\v\n" +
	"\aTochigi\x10\t\x12\t\n" +
	"\x05Gunma\x10\n" +
	"\x12\v\n" +
	"\aSaitama\x10\v\x12\t\n" +
	"\x05Chiba\x10\f\x12\t\n" +
	"\x05Tokyo\x10\r\x12\f\n" +
	"\bKanagawa\x10\x0e\x12\v\n" +
	"\aNiigata\x10\x0f\x12\n" +
	"\n" +
	"\x06Toyama\x10\x10\x12\f\n" +
	"\bIshikawa\x10\x11\x12\t\n" +
	"\x05Fukui\x10\x12\x12\r\n" +
	"\tYamanashi\x10\x13\x12\n" +
	"\n" +
	"\x06Nagano\x10\x14\x12\b\n" +
	"\x04Gifu\x10\x15\x12\f\n" +
	"\bShizuoka\x10\x16\x12\t\n" +
	"\x05Aichi\x10\x17\x12\a\n" +
	"\x03Mie\x10\x18\x12\t\n" +
	"\x05Shiga\x10\x19\x12\t\n" +
	"\x05Kyoto\x10\x1a\x12\t\n" +
	"\x05Osaka\x10\x1b\x12\t\n" +
	"\x05Hyogo\x10\x1c\x12\b\n" +
	"\x04Nara\x10\x1d\x12\f\n" +
	"\bWakayama\x10\x1e\x12\v\n" +
	"\aTottori\x10\x1f\x12\v\n" +
	"\aShimane\x10 \x12\v\n" +
	"\aOkayama\x10!\x12\r\n" +
	"\tHiroshima\x10\"\x12\r\n" +
	"\tYamaguchi\x10#\x12\r\n" +
	"\tTokushima\x10$\x12\n" +
	"\n" +
	"\x06Kagawa\x10%\x12\t\n" +
	"\x05Ehime\x10&\x12\t\n" +
	"\x05Kochi\x10'\x12\v\n" +
	"\aFukuoka\x10(\x12\b\n" +
	"\x04Saga\x10)\x12\f\n" +
	"\bNagasaki\x10*\x12\f\n" +
	"\bKumamoto\x10+\x12\b\n" +
	"\x04Oita\x10,\x12\f\n" +
	"\bMiyazaki\x10-\x12\r\n" +
	"\tKagoshima\x10.\x12\v\n" +
	"\aOkinawa\x10/B\x8f\x01\n" +
	"\x11com.server.sharedB\x0fPrefectureProtoP\x01Z\x14server/api/v1/shared\xa2\x02\x03SSX\xaa\x02\rServer.Shared\xca\x02\rServer\\Shared\xe2\x02\x19Server\\Shared\\GPBMetadata\xea\x02\x0eServer::Sharedb\x06proto3"

var (
	file_v1_shared_Prefecture_proto_rawDescOnce sync.Once
	file_v1_shared_Prefecture_proto_rawDescData []byte
)

func file_v1_shared_Prefecture_proto_rawDescGZIP() []byte {
	file_v1_shared_Prefecture_proto_rawDescOnce.Do(func() {
		file_v1_shared_Prefecture_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_shared_Prefecture_proto_rawDesc), len(file_v1_shared_Prefecture_proto_rawDesc)))
	})
	return file_v1_shared_Prefecture_proto_rawDescData
}

var file_v1_shared_Prefecture_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_shared_Prefecture_proto_goTypes = []any{
	(Prefecture)(0), // 0: server.shared.Prefecture
}
var file_v1_shared_Prefecture_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_shared_Prefecture_proto_init() }
func file_v1_shared_Prefecture_proto_init() {
	if File_v1_shared_Prefecture_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_shared_Prefecture_proto_rawDesc), len(file_v1_shared_Prefecture_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_shared_Prefecture_proto_goTypes,
		DependencyIndexes: file_v1_shared_Prefecture_proto_depIdxs,
		EnumInfos:         file_v1_shared_Prefecture_proto_enumTypes,
	}.Build()
	File_v1_shared_Prefecture_proto = out.File
	file_v1_shared_Prefecture_proto_goTypes = nil
	file_v1_shared_Prefecture_proto_depIdxs = nil
}
