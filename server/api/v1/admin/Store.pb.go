// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: v1/admin/Store.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // uuid.UUID
	Name            string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	BranchName      *string            `protobuf:"bytes,3,opt,name=BranchName,proto3,oneof" json:"BranchName,omitempty"`
	ZipCode         string             `protobuf:"bytes,4,opt,name=ZipCode,proto3" json:"ZipCode,omitempty"`
	Address         string             `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Tel             string             `protobuf:"bytes,6,opt,name=Tel,proto3" json:"Tel,omitempty"`
	SiteURL         string             `protobuf:"bytes,7,opt,name=SiteURL,proto3" json:"SiteURL,omitempty"`
	StampImageURL   string             `protobuf:"bytes,8,opt,name=StampImageURL,proto3" json:"StampImageURL,omitempty"`
	Stayable        bool               `protobuf:"varint,9,opt,name=Stayable,proto3" json:"Stayable,omitempty"`
	IsActive        bool               `protobuf:"varint,10,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	QRCode          string             `protobuf:"bytes,11,opt,name=QRCode,proto3" json:"QRCode,omitempty"`                   // uuid.UUID
	UnLimitedQRCode string             `protobuf:"bytes,12,opt,name=UnLimitedQRCode,proto3" json:"UnLimitedQRCode,omitempty"` // uuid.UUID
	StayableInfo    *StayableStoreInfo `protobuf:"bytes,13,opt,name=StayableInfo,proto3,oneof" json:"StayableInfo,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{0}
}

func (x *Store) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Store) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Store) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *Store) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Store) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Store) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *Store) GetSiteURL() string {
	if x != nil {
		return x.SiteURL
	}
	return ""
}

func (x *Store) GetStampImageURL() string {
	if x != nil {
		return x.StampImageURL
	}
	return ""
}

func (x *Store) GetStayable() bool {
	if x != nil {
		return x.Stayable
	}
	return false
}

func (x *Store) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Store) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

func (x *Store) GetUnLimitedQRCode() string {
	if x != nil {
		return x.UnLimitedQRCode
	}
	return ""
}

func (x *Store) GetStayableInfo() *StayableStoreInfo {
	if x != nil {
		return x.StayableInfo
	}
	return nil
}

type Stores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stores []*Store `protobuf:"bytes,1,rep,name=Stores,proto3" json:"Stores,omitempty"`
}

func (x *Stores) Reset() {
	*x = Stores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stores) ProtoMessage() {}

func (x *Stores) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stores.ProtoReflect.Descriptor instead.
func (*Stores) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{1}
}

func (x *Stores) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

type StoreRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string             `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	BranchName      *string            `protobuf:"bytes,2,opt,name=BranchName,proto3,oneof" json:"BranchName,omitempty"`
	ZipCode         string             `protobuf:"bytes,3,opt,name=ZipCode,proto3" json:"ZipCode,omitempty"`
	Address         string             `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	Tel             string             `protobuf:"bytes,5,opt,name=Tel,proto3" json:"Tel,omitempty"`
	SiteURL         string             `protobuf:"bytes,6,opt,name=SiteURL,proto3" json:"SiteURL,omitempty"`
	StampImageData  string             `protobuf:"bytes,7,opt,name=StampImageData,proto3" json:"StampImageData,omitempty"`
	Stayable        bool               `protobuf:"varint,8,opt,name=Stayable,proto3" json:"Stayable,omitempty"`
	IsActive        bool               `protobuf:"varint,9,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	QRCode          string             `protobuf:"bytes,10,opt,name=QRCode,proto3" json:"QRCode,omitempty"`
	UnLimitedQRCode string             `protobuf:"bytes,11,opt,name=UnLimitedQRCode,proto3" json:"UnLimitedQRCode,omitempty"`
	StayableInfo    *StayableStoreInfo `protobuf:"bytes,12,opt,name=StayableInfo,proto3,oneof" json:"StayableInfo,omitempty"`
}

func (x *StoreRegisterRequest) Reset() {
	*x = StoreRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRegisterRequest) ProtoMessage() {}

func (x *StoreRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRegisterRequest.ProtoReflect.Descriptor instead.
func (*StoreRegisterRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{2}
}

func (x *StoreRegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreRegisterRequest) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *StoreRegisterRequest) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *StoreRegisterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreRegisterRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *StoreRegisterRequest) GetSiteURL() string {
	if x != nil {
		return x.SiteURL
	}
	return ""
}

func (x *StoreRegisterRequest) GetStampImageData() string {
	if x != nil {
		return x.StampImageData
	}
	return ""
}

func (x *StoreRegisterRequest) GetStayable() bool {
	if x != nil {
		return x.Stayable
	}
	return false
}

func (x *StoreRegisterRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StoreRegisterRequest) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

func (x *StoreRegisterRequest) GetUnLimitedQRCode() string {
	if x != nil {
		return x.UnLimitedQRCode
	}
	return ""
}

func (x *StoreRegisterRequest) GetStayableInfo() *StayableStoreInfo {
	if x != nil {
		return x.StayableInfo
	}
	return nil
}

type StoreUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name            string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	BranchName      *string            `protobuf:"bytes,3,opt,name=BranchName,proto3,oneof" json:"BranchName,omitempty"`
	ZipCode         string             `protobuf:"bytes,4,opt,name=ZipCode,proto3" json:"ZipCode,omitempty"`
	Address         string             `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Tel             string             `protobuf:"bytes,6,opt,name=Tel,proto3" json:"Tel,omitempty"`
	SiteURL         string             `protobuf:"bytes,7,opt,name=SiteURL,proto3" json:"SiteURL,omitempty"`
	StampImageData  string             `protobuf:"bytes,8,opt,name=StampImageData,proto3" json:"StampImageData,omitempty"`
	Stayable        bool               `protobuf:"varint,9,opt,name=Stayable,proto3" json:"Stayable,omitempty"`
	IsActive        bool               `protobuf:"varint,10,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	QRCode          string             `protobuf:"bytes,11,opt,name=QRCode,proto3" json:"QRCode,omitempty"`
	UnLimitedQRCode string             `protobuf:"bytes,12,opt,name=UnLimitedQRCode,proto3" json:"UnLimitedQRCode,omitempty"`
	StayableInfo    *StayableStoreInfo `protobuf:"bytes,13,opt,name=StayableInfo,proto3" json:"StayableInfo,omitempty"`
}

func (x *StoreUpdateRequest) Reset() {
	*x = StoreUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreUpdateRequest) ProtoMessage() {}

func (x *StoreUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreUpdateRequest.ProtoReflect.Descriptor instead.
func (*StoreUpdateRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{3}
}

func (x *StoreUpdateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StoreUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreUpdateRequest) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *StoreUpdateRequest) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *StoreUpdateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreUpdateRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *StoreUpdateRequest) GetSiteURL() string {
	if x != nil {
		return x.SiteURL
	}
	return ""
}

func (x *StoreUpdateRequest) GetStampImageData() string {
	if x != nil {
		return x.StampImageData
	}
	return ""
}

func (x *StoreUpdateRequest) GetStayable() bool {
	if x != nil {
		return x.Stayable
	}
	return false
}

func (x *StoreUpdateRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StoreUpdateRequest) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

func (x *StoreUpdateRequest) GetUnLimitedQRCode() string {
	if x != nil {
		return x.UnLimitedQRCode
	}
	return ""
}

func (x *StoreUpdateRequest) GetStayableInfo() *StayableStoreInfo {
	if x != nil {
		return x.StayableInfo
	}
	return nil
}

type StayableStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parking               string  `protobuf:"bytes,1,opt,name=Parking,proto3" json:"Parking,omitempty"`
	Latitude              float64 `protobuf:"fixed64,2,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude             float64 `protobuf:"fixed64,3,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	AccessInfo            string  `protobuf:"bytes,4,opt,name=AccessInfo,proto3" json:"AccessInfo,omitempty"`
	RestAPIURL            string  `protobuf:"bytes,5,opt,name=RestAPIURL,proto3" json:"RestAPIURL,omitempty"`
	BookingSystemID       string  `protobuf:"bytes,6,opt,name=BookingSystemID,proto3" json:"BookingSystemID,omitempty"`
	BookingSystemLoginId  string  `protobuf:"bytes,7,opt,name=BookingSystemLoginId,proto3" json:"BookingSystemLoginId,omitempty"`
	BookingSystemPassword string  `protobuf:"bytes,8,opt,name=BookingSystemPassword,proto3" json:"BookingSystemPassword,omitempty"`
}

func (x *StayableStoreInfo) Reset() {
	*x = StayableStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StayableStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StayableStoreInfo) ProtoMessage() {}

func (x *StayableStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StayableStoreInfo.ProtoReflect.Descriptor instead.
func (*StayableStoreInfo) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{4}
}

func (x *StayableStoreInfo) GetParking() string {
	if x != nil {
		return x.Parking
	}
	return ""
}

func (x *StayableStoreInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *StayableStoreInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *StayableStoreInfo) GetAccessInfo() string {
	if x != nil {
		return x.AccessInfo
	}
	return ""
}

func (x *StayableStoreInfo) GetRestAPIURL() string {
	if x != nil {
		return x.RestAPIURL
	}
	return ""
}

func (x *StayableStoreInfo) GetBookingSystemID() string {
	if x != nil {
		return x.BookingSystemID
	}
	return ""
}

func (x *StayableStoreInfo) GetBookingSystemLoginId() string {
	if x != nil {
		return x.BookingSystemLoginId
	}
	return ""
}

func (x *StayableStoreInfo) GetBookingSystemPassword() string {
	if x != nil {
		return x.BookingSystemPassword
	}
	return ""
}

type StoreIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *StoreIDRequest) Reset() {
	*x = StoreIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreIDRequest) ProtoMessage() {}

func (x *StoreIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreIDRequest.ProtoReflect.Descriptor instead.
func (*StoreIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{5}
}

func (x *StoreIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type QRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QRCode string `protobuf:"bytes,1,opt,name=QRCode,proto3" json:"QRCode,omitempty"`
}

func (x *QRResponse) Reset() {
	*x = QRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRResponse) ProtoMessage() {}

func (x *QRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRResponse.ProtoReflect.Descriptor instead.
func (*QRResponse) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{6}
}

func (x *QRResponse) GetQRCode() string {
	if x != nil {
		return x.QRCode
	}
	return ""
}

type UnlimitQRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlimitQRCode string `protobuf:"bytes,1,opt,name=UnlimitQRCode,proto3" json:"UnlimitQRCode,omitempty"`
}

func (x *UnlimitQRResponse) Reset() {
	*x = UnlimitQRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_Store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlimitQRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlimitQRResponse) ProtoMessage() {}

func (x *UnlimitQRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_Store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlimitQRResponse.ProtoReflect.Descriptor instead.
func (*UnlimitQRResponse) Descriptor() ([]byte, []int) {
	return file_v1_admin_Store_proto_rawDescGZIP(), []int{7}
}

func (x *UnlimitQRResponse) GetUnlimitQRCode() string {
	if x != nil {
		return x.UnlimitQRCode
	}
	return ""
}

var File_v1_admin_Store_proto protoreflect.FileDescriptor

var file_v1_admin_Store_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xba, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69,
	0x74, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x74,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0c, 0x53,
	0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35,
	0x0a, 0x06, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x22, 0xbb, 0x03, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x69, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x69, 0x74, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x55, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x52, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x79, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xb3, 0x03, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69, 0x74,
	0x65, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69, 0x74, 0x65,
	0x55, 0x52, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53,
	0x74, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x55,
	0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x79, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x79, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x53, 0x74,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x55, 0x52,
	0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49,
	0x55, 0x52, 0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x32, 0x0a,
	0x14, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x24, 0x0a, 0x0a, 0x51, 0x52, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x39, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x51, 0x52, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x6e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xf5, 0x03, 0x0a, 0x0f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x51,
	0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x52,
	0x65, 0x67, 0x65, 0x6e, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55,
	0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x51, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x84, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x53, 0x41, 0x58,
	0xaa, 0x02, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xca,
	0x02, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xe2, 0x02,
	0x18, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x3a, 0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_admin_Store_proto_rawDescOnce sync.Once
	file_v1_admin_Store_proto_rawDescData = file_v1_admin_Store_proto_rawDesc
)

func file_v1_admin_Store_proto_rawDescGZIP() []byte {
	file_v1_admin_Store_proto_rawDescOnce.Do(func() {
		file_v1_admin_Store_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_admin_Store_proto_rawDescData)
	})
	return file_v1_admin_Store_proto_rawDescData
}

var file_v1_admin_Store_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_v1_admin_Store_proto_goTypes = []interface{}{
	(*Store)(nil),                // 0: server.admin.Store
	(*Stores)(nil),               // 1: server.admin.Stores
	(*StoreRegisterRequest)(nil), // 2: server.admin.StoreRegisterRequest
	(*StoreUpdateRequest)(nil),   // 3: server.admin.StoreUpdateRequest
	(*StayableStoreInfo)(nil),    // 4: server.admin.StayableStoreInfo
	(*StoreIDRequest)(nil),       // 5: server.admin.StoreIDRequest
	(*QRResponse)(nil),           // 6: server.admin.QRResponse
	(*UnlimitQRResponse)(nil),    // 7: server.admin.UnlimitQRResponse
	(*emptypb.Empty)(nil),        // 8: google.protobuf.Empty
}
var file_v1_admin_Store_proto_depIdxs = []int32{
	4,  // 0: server.admin.Store.StayableInfo:type_name -> server.admin.StayableStoreInfo
	0,  // 1: server.admin.Stores.Stores:type_name -> server.admin.Store
	4,  // 2: server.admin.StoreRegisterRequest.StayableInfo:type_name -> server.admin.StayableStoreInfo
	4,  // 3: server.admin.StoreUpdateRequest.StayableInfo:type_name -> server.admin.StayableStoreInfo
	5,  // 4: server.admin.StoreController.GetByID:input_type -> server.admin.StoreIDRequest
	8,  // 5: server.admin.StoreController.GetAll:input_type -> google.protobuf.Empty
	8,  // 6: server.admin.StoreController.GetActiveAll:input_type -> google.protobuf.Empty
	2,  // 7: server.admin.StoreController.Register:input_type -> server.admin.StoreRegisterRequest
	3,  // 8: server.admin.StoreController.Update:input_type -> server.admin.StoreUpdateRequest
	5,  // 9: server.admin.StoreController.RegenQRCode:input_type -> server.admin.StoreIDRequest
	5,  // 10: server.admin.StoreController.RegenUnlimitQRCode:input_type -> server.admin.StoreIDRequest
	0,  // 11: server.admin.StoreController.GetByID:output_type -> server.admin.Store
	1,  // 12: server.admin.StoreController.GetAll:output_type -> server.admin.Stores
	1,  // 13: server.admin.StoreController.GetActiveAll:output_type -> server.admin.Stores
	0,  // 14: server.admin.StoreController.Register:output_type -> server.admin.Store
	0,  // 15: server.admin.StoreController.Update:output_type -> server.admin.Store
	6,  // 16: server.admin.StoreController.RegenQRCode:output_type -> server.admin.QRResponse
	7,  // 17: server.admin.StoreController.RegenUnlimitQRCode:output_type -> server.admin.UnlimitQRResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_v1_admin_Store_proto_init() }
func file_v1_admin_Store_proto_init() {
	if File_v1_admin_Store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_admin_Store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StayableStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_Store_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlimitQRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_admin_Store_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_v1_admin_Store_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_v1_admin_Store_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_admin_Store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_admin_Store_proto_goTypes,
		DependencyIndexes: file_v1_admin_Store_proto_depIdxs,
		MessageInfos:      file_v1_admin_Store_proto_msgTypes,
	}.Build()
	File_v1_admin_Store_proto = out.File
	file_v1_admin_Store_proto_rawDesc = nil
	file_v1_admin_Store_proto_goTypes = nil
	file_v1_admin_Store_proto_depIdxs = nil
}
